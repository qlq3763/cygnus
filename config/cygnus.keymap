/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&lt {
    quick-tap-ms = <180>;
    flavor = "hold-preferred";
};

/ {
    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <11 12>;
            timeout-ms = <40>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <12 13>;
            timeout-ms = <40>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <16 17>;
            timeout-ms = <40>;
        };

        copy {
            bindings = <&kp LG(C)>;
            key-positions = <21 22>;
            timeout-ms = <40>;
        };

        paste {
            bindings = <&kp LG(V)>;
            key-positions = <22 23>;
            timeout-ms = <40>;
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <3 14>;
        };

        slash {
            bindings = <&kp SLASH>;
            key-positions = <15 6>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <17 18>;
            timeout-ms = <40>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <27 28>;
            timeout-ms = <40>;
        };
    };

    behaviors {
        hr: hr {
            compatible = "zmk,behavior-hold-tap";
            label = "HR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <210>;
            quick-tap-ms = <180>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            bindings = <
&kp Q           &kp W           &kp E           &kp R             &kp T          &kp Y      &kp U              &kp I            &kp O            &kp P
&hr LEFT_GUI A  &hr LEFT_ALT S  &hr LCTRL D     &hr LEFT_SHIFT F  &kp G          &kp H      &hr RIGHT_SHIFT J  &hr RCTRL K      &hr RIGHT_ALT L  &hr RIGHT_GUI SEMI
&kp Z           &kp X           &kp C           &kp V             &kp B          &kp N      &kp M              &kp COMMA        &kp PERIOD       &kp SLASH
                                &bt BT_CLR_ALL  &lt 2 BACKSPACE   &mt LCTRL TAB  &kp ENTER  &lt 3 SPACE        &kp RIGHT_SHIFT
            >;
        };

        nav_num {
            bindings = <
&kp N1    &kp N2    &kp N3         &kp N4     &kp N5    &kp N6        &kp N7        &kp N8            &kp N9         &kp N0
&kp LGUI  &kp LALT  &kp LCTRL      &kp LSHFT  &kp CAPS  &kp LEFT      &kp DOWN      &kp UP_ARROW      &kp RIGHT      &kp PAGE_UP
&trans    &trans    &kp LG(LA(C))  &trans     &kp ESC   &kp LG(LEFT)  &kp LG(DOWN)  &kp LG(UP_ARROW)  &kp LG(RIGHT)  &kp PAGE_DOWN
                    &trans         &trans     &trans    &trans        &trans        &trans
            >;
        };

        sym {
            bindings = <
&kp EXCL           &kp AT           &kp HASH       &kp DOLLAR      &kp PERCENT   &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp LEFT_BRACKET   &kp LEFT_BRACE   &kp PIPE       &kp LEFT_SHIFT  &kp CAPSLOCK  &kp PLUS   &kp MINUS      &kp GRAVE     &kp SLASH             &kp SINGLE_QUOTE
&kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp LG(LA(C))  &trans          &kp ESC       &kp EQUAL  &kp UNDER      &kp TILDE     &kp BACKSLASH         &kp DOUBLE_QUOTES
                                    &trans         &trans          &trans        &trans     &trans         &trans
            >;
        };

        fun {
            bindings = <
&kp F1   &kp F2   &kp F3  &kp F4  &kp F5  &kp F6        &kp F7  &kp F8  &kp F9  &kp F10
&kp F11  &kp F12  &trans  &trans  &trans  &kp C_VOL_UP  &trans  &trans  &trans  &trans
&trans   &trans   &trans  &trans  &trans  &kp C_VOL_DN  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans  &trans        &trans  &trans
            >;
        };

        bt {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &bt BT_CLR    &bt BT_CLR_ALL  &trans  &trans  &trans  &trans  &trans
&bootloader   &trans        &trans        &trans        &out OUT_TOG    &trans  &trans  &trans  &trans  &bootloader
                            &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        bt {
            if-layers = <1 2>;
            then-layer = <4>;
        };
    };
};
